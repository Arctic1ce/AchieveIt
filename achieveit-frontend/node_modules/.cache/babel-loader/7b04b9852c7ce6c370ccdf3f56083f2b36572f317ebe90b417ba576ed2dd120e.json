{"ast":null,"code":"var _jsxFileName = \"/Users/akhilelamanchili/AchieveIt/achieveit-frontend/src/TaskList.js\",\n  _s = $RefreshSig$();\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport Row from 'react-bootstrap/Row';\nimport Tab from 'react-bootstrap/Tab';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Stack from 'react-bootstrap/Stack';\nimport React, { useState } from 'react';\nimport ListTable from './ListTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList(props) {\n  _s();\n  const [listName, setListName] = useState(\"\");\n  function updateListName(text) {\n    setListName(text);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Tab.Container, {\n      id: \"list-group-tabs-example\",\n      defaultActiveKey: \"#AllTasks\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              action: true,\n              href: \"#AllTasks\",\n              className: \"d-flex justify-content-between align-items-start\",\n              children: [\"All Tasks\", /*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"primary\",\n                pill: true,\n                children: props.numItems\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 33\n              }, this)]\n            }, \"AllTasks\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), props.lists.map(item => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              action: true,\n              href: `#${item.name}`,\n              className: \"d-flex justify-content-between align-items-start\",\n              children: [item.name, /*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"primary\",\n                pill: true,\n                children: item.items.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 37\n              }, this)]\n            }, item.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 8,\n          children: /*#__PURE__*/_jsxDEV(Tab.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: \"#AllTasks\",\n              children: /*#__PURE__*/_jsxDEV(ListTable, {\n                list: props.lists,\n                setChecked: props.setChecked,\n                insertTask: props.insertTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)\n            }, \"AllTasks\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), props.lists.map(task => /*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: `#${task.name}`,\n              children: /*#__PURE__*/_jsxDEV(ListTable, {\n                list: [task],\n                setChecked: props.setChecked,\n                insertTask: props.insertTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 37\n              }, this)\n            }, `${task.name}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      sm: 2,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"horizontal\",\n        gap: 2,\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          id: \"newList\",\n          \"aria-describedby\": \"helpBlock\",\n          placeholder: \"List Name\",\n          onChange: e => updateListName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: () => props.addList(listName),\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskList, \"OH/qucDe0mUqx8PSLGEIAN3IGu4=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["Col","ListGroup","Badge","Row","Tab","Form","Button","Stack","React","useState","ListTable","jsxDEV","_jsxDEV","TaskList","props","_s","listName","setListName","updateListName","text","children","Container","id","defaultActiveKey","sm","Item","action","href","className","bg","pill","numItems","fileName","_jsxFileName","lineNumber","columnNumber","lists","map","item","name","items","length","Content","Pane","eventKey","list","setChecked","insertTask","task","direction","gap","Control","type","placeholder","onChange","e","target","value","variant","onClick","addList","_c","$RefreshReg$"],"sources":["/Users/akhilelamanchili/AchieveIt/achieveit-frontend/src/TaskList.js"],"sourcesContent":["import Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport Row from 'react-bootstrap/Row';\nimport Tab from 'react-bootstrap/Tab';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Stack from 'react-bootstrap/Stack';\nimport React, { useState } from 'react';\nimport ListTable from './ListTable';\n\nfunction TaskList(props) {\n\n    const [listName, setListName] = useState(\"\");\n\n    function updateListName(text) {\n        setListName(text);\n    }\n\n    return (\n        <div>\n            <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey={\"#AllTasks\"}>\n                <Row>\n                    <Col sm={2}>\n                        <ListGroup>\n                            <ListGroup.Item key={\"AllTasks\"} action href={\"#AllTasks\"} className=\"d-flex justify-content-between align-items-start\">\n                                All Tasks\n                                <Badge bg=\"primary\" pill>\n                                    {props.numItems}\n                                </Badge>\n                            </ListGroup.Item>\n                            {props.lists.map((item) => (\n                                <ListGroup.Item key={item.name} action href={`#${item.name}`} className=\"d-flex justify-content-between align-items-start\">\n                                    {item.name}\n                                    <Badge bg=\"primary\" pill>\n                                        {item.items.length}\n                                    </Badge>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    </Col>\n                    <Col sm={8}>\n                        <Tab.Content>\n                            <Tab.Pane key={\"AllTasks\"} eventKey={\"#AllTasks\"}>\n                                <ListTable list={props.lists} setChecked={props.setChecked} insertTask={props.insertTask}/>\n                            </Tab.Pane>\n                            {props.lists.map((task) => (\n                                <Tab.Pane key={`${task.name}`} eventKey={`#${task.name}`}>\n                                    <ListTable list={[task]} setChecked={props.setChecked} insertTask={props.insertTask}/>\n                                </Tab.Pane>\n                            ))}\n                        </Tab.Content>\n                    </Col>\n                </Row>\n            </Tab.Container>\n            <Col sm={2}>\n                <Stack direction=\"horizontal\" gap={2}>\n                    <Form.Control\n                        type=\"text\"\n                        id=\"newList\"\n                        aria-describedby=\"helpBlock\"\n                        placeholder=\"List Name\"\n                        onChange={(e) => updateListName(e.target.value)}\n                    />\n                    <Button variant=\"dark\" onClick={() => props.addList(listName)}>\n                        Create\n                    </Button>\n                </Stack>\n            </Col>\n        </div>\n    );\n}\n\nexport default TaskList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}