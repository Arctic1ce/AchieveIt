{"ast":null,"code":"var _jsxFileName = \"/Users/akhilelamanchili/AchieveIt/achieveit-frontend/src/AchieveIt.js\",\n  _s = $RefreshSig$();\n// AchieveIt.js\nimport Navbar from './Navbar';\nimport TaskList from './TaskList';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tasks = [{\n  name: 'Favorites',\n  items: [{\n    task: 'Do laundry',\n    description: 'some random description',\n    due_date: 'some time',\n    priority: 'High',\n    task_category: 'Favorites',\n    completed: false\n  }]\n}, {\n  name: 'Groceries',\n  items: []\n}, {\n  name: 'Work',\n  items: []\n}, {\n  name: 'School',\n  items: [{\n    task: 'Do homework',\n    description: 'some semi description',\n    due_date: 'some random time',\n    priority: 'Low',\n    task_category: 'School',\n    completed: false\n  }]\n}, {\n  name: 'Sports',\n  items: []\n}, {\n  name: 'Cars',\n  items: []\n}, {\n  name: 'Wishlist',\n  items: []\n}, {\n  name: 'Something',\n  items: []\n}, {\n  name: 'Idk',\n  items: []\n}];\nfunction AchieveIt() {\n  _s();\n  const [taskLists, setTasks] = useState([]);\n  const [numItems, setNumItems] = useState(0);\n  useEffect(() => {\n    setTasks(tasks);\n  }, []);\n  useEffect(() => {\n    let count = 0;\n    for (let i = 0; i < taskLists.length; i++) {\n      count += taskLists[i].items.length;\n    }\n    setNumItems(count);\n  }, [taskLists]);\n  function addList(listName) {\n    const newItem = {\n      name: listName,\n      items: []\n    };\n    setTasks([...taskLists, newItem]);\n  }\n  function insertTask(list, task) {\n    let newLists = [...taskLists];\n    for (let i = 0; i < taskLists.length; i++) {\n      if (taskLists[i].name === list) {\n        newLists[i].items.push(task);\n      }\n    }\n    setTasks(newLists);\n  }\n  function setChecked(task, val, status) {\n    let list = [...taskLists];\n    for (let i = 0; i < taskLists.length; i++) {\n      if (taskLists[i] === task) {\n        for (let j = 0; j < taskLists[i].items.length; j++) {\n          if (taskLists[i].items[j] === val) {\n            list[i].items[j].completed = status;\n          }\n        }\n      }\n    }\n    setTasks(list);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AchieveIt\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskList\",\n      children: /*#__PURE__*/_jsxDEV(TaskList, {\n        lists: taskLists,\n        addList: addList,\n        numItems: numItems,\n        setChecked: setChecked,\n        insertTask: insertTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n_s(AchieveIt, \"GF5+XnK0FYj45oCIwYnPnMQc/50=\");\n_c = AchieveIt;\nexport default AchieveIt;\nvar _c;\n$RefreshReg$(_c, \"AchieveIt\");","map":{"version":3,"names":["Navbar","TaskList","React","useState","useEffect","jsxDEV","_jsxDEV","tasks","name","items","task","description","due_date","priority","task_category","completed","AchieveIt","_s","taskLists","setTasks","numItems","setNumItems","count","i","length","addList","listName","newItem","insertTask","list","newLists","push","setChecked","val","status","j","className","children","fileName","_jsxFileName","lineNumber","columnNumber","lists","_c","$RefreshReg$"],"sources":["/Users/akhilelamanchili/AchieveIt/achieveit-frontend/src/AchieveIt.js"],"sourcesContent":["// AchieveIt.js\nimport Navbar from './Navbar';\nimport TaskList from './TaskList';\nimport React, { useState, useEffect } from 'react';\n\nconst tasks = [\n    {\n        name: 'Favorites',\n        items: [\n            {\n                task: 'Do laundry',\n                description: 'some random description',\n                due_date: 'some time',\n                priority: 'High',\n                task_category: 'Favorites',\n                completed: false,\n            },\n        ],\n    },\n    {\n        name: 'Groceries',\n        items: [],\n    },\n    {\n        name: 'Work',\n        items: [],\n    },\n    {\n        name: 'School',\n        items: [\n            {\n                task: 'Do homework',\n                description: 'some semi description',\n                due_date: 'some random time',\n                priority: 'Low',\n                task_category: 'School',\n                completed: false\n            },\n        ],\n    },\n    {\n        name: 'Sports',\n        items: [],\n    },\n    {\n        name: 'Cars',\n        items: [],\n    },\n    {\n        name: 'Wishlist',\n        items: [],\n    },\n    {\n        name: 'Something',\n        items: [],\n    },\n    {\n        name: 'Idk',\n        items: [],\n    },\n]\n\nfunction AchieveIt() {\n    const [taskLists, setTasks] = useState([]);\n    const [numItems, setNumItems] = useState(0);\n\n    useEffect(() => {\n        setTasks(tasks);\n    }, []);\n\n    useEffect(() => {\n        let count = 0;\n        for (let i = 0; i < taskLists.length; i++) {\n            count += taskLists[i].items.length;\n        }\n        setNumItems(count);\n    }, [taskLists]);\n\n    function addList(listName) {\n        const newItem = {\n            name: listName,\n            items: [],\n        };\n        setTasks([...taskLists, newItem]);\n    }\n\n    function insertTask(list, task) {\n        let newLists = [...taskLists];\n        for (let i = 0; i < taskLists.length; i++) {\n            if (taskLists[i].name === list) {\n                newLists[i].items.push(task);\n            }\n        }\n        setTasks(newLists);\n    }\n\n    function setChecked(task, val, status) {\n        let list = [...taskLists];\n        for (let i = 0; i < taskLists.length; i++) {\n            if (taskLists[i] === task) {\n                for (let j = 0; j < taskLists[i].items.length; j++) {\n                    if (taskLists[i].items[j] === val) {\n                        list[i].items[j].completed = status;\n                    }\n                }\n            }\n        }\n        setTasks(list);\n    }\n\n    return (\n        <div className=\"AchieveIt\">\n            <div className=\"header\">\n                <Navbar />\n            </div>\n            <div className=\"taskList\">\n                <TaskList lists={taskLists} addList={addList} numItems={numItems} setChecked={setChecked} insertTask={insertTask}/>\n            </div>\n        </div>\n    );\n}\n\nexport default AchieveIt;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}