{"ast":null,"code":"// src/index.ts\nimport { useMemo, useCallback, useState, useEffect } from \"react\";\nimport { range } from \"@nextui-org/shared-utils\";\nvar PaginationItemType = /* @__PURE__ */(PaginationItemType2 => {\n  PaginationItemType2[\"DOTS\"] = \"dots\";\n  PaginationItemType2[\"PREV\"] = \"prev\";\n  PaginationItemType2[\"NEXT\"] = \"next\";\n  return PaginationItemType2;\n})(PaginationItemType || {});\nfunction usePagination(props) {\n  const {\n    page,\n    total,\n    siblings = 1,\n    boundaries = 1,\n    initialPage = 1,\n    showControls = false,\n    onChange\n  } = props;\n  const [activePage, setActivePage] = useState(page || initialPage);\n  const onChangeActivePage = newPage => {\n    setActivePage(newPage);\n    onChange && onChange(newPage);\n  };\n  useEffect(() => {\n    if (page && page !== activePage) {\n      setActivePage(page);\n    }\n  }, [page]);\n  const setPage = useCallback(pageNumber => {\n    if (pageNumber <= 0) {\n      onChangeActivePage(1);\n    } else if (pageNumber > total) {\n      onChangeActivePage(total);\n    } else {\n      onChangeActivePage(pageNumber);\n    }\n  }, [total, activePage]);\n  const next = () => setPage(activePage + 1);\n  const previous = () => setPage(activePage - 1);\n  const first = () => setPage(1);\n  const last = () => setPage(total);\n  const formatRange = useCallback(range2 => {\n    if (showControls) {\n      return [\"prev\" /* PREV */, ...range2, \"next\" /* NEXT */];\n    }\n\n    return range2;\n  }, [showControls]);\n  const paginationRange = useMemo(() => {\n    const totalPageNumbers = siblings * 2 + 3 + boundaries * 2;\n    if (totalPageNumbers >= total) {\n      return formatRange(range(1, total));\n    }\n    const leftSiblingIndex = Math.max(activePage - siblings, boundaries);\n    const rightSiblingIndex = Math.min(activePage + siblings, total - boundaries);\n    const shouldShowLeftDots = leftSiblingIndex > boundaries + 2;\n    const shouldShowRightDots = rightSiblingIndex < total - (boundaries + 1);\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = siblings * 2 + boundaries + 2;\n      return formatRange([...range(1, leftItemCount), \"dots\" /* DOTS */, ...range(total - (boundaries - 1), total)]);\n    }\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = boundaries + 1 + 2 * siblings;\n      return formatRange([...range(1, boundaries), \"dots\" /* DOTS */, ...range(total - rightItemCount, total)]);\n    }\n    return formatRange([...range(1, boundaries), \"dots\" /* DOTS */, ...range(leftSiblingIndex, rightSiblingIndex), \"dots\" /* DOTS */, ...range(total - boundaries + 1, total)]);\n  }, [total, activePage, siblings, boundaries, formatRange]);\n  return {\n    range: paginationRange,\n    activePage,\n    setPage,\n    next,\n    previous,\n    first,\n    last\n  };\n}\nexport { PaginationItemType, usePagination };","map":{"version":3,"names":["useMemo","useCallback","useState","useEffect","range","PaginationItemType","PaginationItemType2","usePagination","props","page","total","siblings","boundaries","initialPage","showControls","onChange","activePage","setActivePage","onChangeActivePage","newPage","setPage","pageNumber","next","previous","first","last","formatRange","range2","paginationRange","totalPageNumbers","leftSiblingIndex","Math","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","leftItemCount","rightItemCount"],"sources":["C:/Users/joelp/csc-307-achieveit/AchieveIt/node_modules/@nextui-org/use-pagination/dist/index.mjs"],"sourcesContent":["// src/index.ts\nimport { useMemo, useCallback, useState, useEffect } from \"react\";\nimport { range } from \"@nextui-org/shared-utils\";\nvar PaginationItemType = /* @__PURE__ */ ((PaginationItemType2) => {\n  PaginationItemType2[\"DOTS\"] = \"dots\";\n  PaginationItemType2[\"PREV\"] = \"prev\";\n  PaginationItemType2[\"NEXT\"] = \"next\";\n  return PaginationItemType2;\n})(PaginationItemType || {});\nfunction usePagination(props) {\n  const {\n    page,\n    total,\n    siblings = 1,\n    boundaries = 1,\n    initialPage = 1,\n    showControls = false,\n    onChange\n  } = props;\n  const [activePage, setActivePage] = useState(page || initialPage);\n  const onChangeActivePage = (newPage) => {\n    setActivePage(newPage);\n    onChange && onChange(newPage);\n  };\n  useEffect(() => {\n    if (page && page !== activePage) {\n      setActivePage(page);\n    }\n  }, [page]);\n  const setPage = useCallback(\n    (pageNumber) => {\n      if (pageNumber <= 0) {\n        onChangeActivePage(1);\n      } else if (pageNumber > total) {\n        onChangeActivePage(total);\n      } else {\n        onChangeActivePage(pageNumber);\n      }\n    },\n    [total, activePage]\n  );\n  const next = () => setPage(activePage + 1);\n  const previous = () => setPage(activePage - 1);\n  const first = () => setPage(1);\n  const last = () => setPage(total);\n  const formatRange = useCallback(\n    (range2) => {\n      if (showControls) {\n        return [\"prev\" /* PREV */, ...range2, \"next\" /* NEXT */];\n      }\n      return range2;\n    },\n    [showControls]\n  );\n  const paginationRange = useMemo(() => {\n    const totalPageNumbers = siblings * 2 + 3 + boundaries * 2;\n    if (totalPageNumbers >= total) {\n      return formatRange(range(1, total));\n    }\n    const leftSiblingIndex = Math.max(activePage - siblings, boundaries);\n    const rightSiblingIndex = Math.min(activePage + siblings, total - boundaries);\n    const shouldShowLeftDots = leftSiblingIndex > boundaries + 2;\n    const shouldShowRightDots = rightSiblingIndex < total - (boundaries + 1);\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = siblings * 2 + boundaries + 2;\n      return formatRange([\n        ...range(1, leftItemCount),\n        \"dots\" /* DOTS */,\n        ...range(total - (boundaries - 1), total)\n      ]);\n    }\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = boundaries + 1 + 2 * siblings;\n      return formatRange([\n        ...range(1, boundaries),\n        \"dots\" /* DOTS */,\n        ...range(total - rightItemCount, total)\n      ]);\n    }\n    return formatRange([\n      ...range(1, boundaries),\n      \"dots\" /* DOTS */,\n      ...range(leftSiblingIndex, rightSiblingIndex),\n      \"dots\" /* DOTS */,\n      ...range(total - boundaries + 1, total)\n    ]);\n  }, [total, activePage, siblings, boundaries, formatRange]);\n  return {\n    range: paginationRange,\n    activePage,\n    setPage,\n    next,\n    previous,\n    first,\n    last\n  };\n}\nexport {\n  PaginationItemType,\n  usePagination\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}