{"ast":null,"code":"\"use client\";\n\nimport { useTooltip } from \"./chunk-QXNXBY53.mjs\";\n\n// src/tooltip.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { OverlayContainer } from \"@react-aria/overlays\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { TRANSITION_VARIANTS } from \"@nextui-org/framer-transitions\";\nimport { warn } from \"@nextui-org/shared-utils\";\nimport { Children, cloneElement } from \"react\";\nimport { getTransformOrigins } from \"@nextui-org/aria-utils\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Tooltip = forwardRef((props, ref) => {\n  const {\n    Component,\n    children,\n    content,\n    isOpen,\n    portalContainer,\n    placement,\n    disableAnimation,\n    motionProps,\n    getTriggerProps,\n    getTooltipProps,\n    getTooltipContentProps\n  } = useTooltip({\n    ...props,\n    ref\n  });\n  let trigger;\n  try {\n    const child = Children.only(children);\n    trigger = cloneElement(child, getTriggerProps(child.props, child.ref));\n  } catch (error) {\n    trigger = /* @__PURE__ */jsx(\"span\", {});\n    warn(\"Tooltip must have only one child node. Please, check your code.\");\n  }\n  const {\n    ref: tooltipRef,\n    id,\n    style,\n    ...otherTooltipProps\n  } = getTooltipProps();\n  const animatedContent = /* @__PURE__ */jsx(\"div\", {\n    ref: tooltipRef,\n    id,\n    style,\n    children: /* @__PURE__ */jsx(motion.div, {\n      animate: \"enter\",\n      exit: \"exit\",\n      initial: \"exit\",\n      variants: TRANSITION_VARIANTS.scaleSpring,\n      ...mergeProps(motionProps, otherTooltipProps),\n      style: {\n        ...getTransformOrigins(placement)\n      },\n      children: /* @__PURE__ */jsx(Component, {\n        ...getTooltipContentProps(),\n        children: content\n      })\n    })\n  });\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [trigger, disableAnimation && isOpen ? /* @__PURE__ */jsx(OverlayContainer, {\n      portalContainer,\n      children: /* @__PURE__ */jsx(\"div\", {\n        ref: tooltipRef,\n        id,\n        style,\n        ...otherTooltipProps,\n        children: /* @__PURE__ */jsx(Component, {\n          ...getTooltipContentProps(),\n          children: content\n        })\n      })\n    }) : /* @__PURE__ */jsx(AnimatePresence, {\n      children: isOpen ? /* @__PURE__ */jsx(OverlayContainer, {\n        portalContainer,\n        children: animatedContent\n      }) : null\n    })]\n  });\n});\nTooltip.displayName = \"NextUI.Tooltip\";\nvar tooltip_default = Tooltip;\nexport { tooltip_default };","map":{"version":3,"names":["useTooltip","forwardRef","OverlayContainer","AnimatePresence","motion","TRANSITION_VARIANTS","warn","Children","cloneElement","getTransformOrigins","mergeProps","Fragment","jsx","jsxs","Tooltip","props","ref","Component","children","content","isOpen","portalContainer","placement","disableAnimation","motionProps","getTriggerProps","getTooltipProps","getTooltipContentProps","trigger","child","only","error","tooltipRef","id","style","otherTooltipProps","animatedContent","div","animate","exit","initial","variants","scaleSpring","displayName","tooltip_default"],"sources":["C:/Users/joelp/csc-307-achieveit/AchieveIt/node_modules/@nextui-org/tooltip/dist/chunk-MA2FG3JE.mjs"],"sourcesContent":["\"use client\";\nimport {\n  useTooltip\n} from \"./chunk-QXNXBY53.mjs\";\n\n// src/tooltip.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { OverlayContainer } from \"@react-aria/overlays\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { TRANSITION_VARIANTS } from \"@nextui-org/framer-transitions\";\nimport { warn } from \"@nextui-org/shared-utils\";\nimport { Children, cloneElement } from \"react\";\nimport { getTransformOrigins } from \"@nextui-org/aria-utils\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Tooltip = forwardRef((props, ref) => {\n  const {\n    Component,\n    children,\n    content,\n    isOpen,\n    portalContainer,\n    placement,\n    disableAnimation,\n    motionProps,\n    getTriggerProps,\n    getTooltipProps,\n    getTooltipContentProps\n  } = useTooltip({\n    ...props,\n    ref\n  });\n  let trigger;\n  try {\n    const child = Children.only(children);\n    trigger = cloneElement(child, getTriggerProps(child.props, child.ref));\n  } catch (error) {\n    trigger = /* @__PURE__ */ jsx(\"span\", {});\n    warn(\"Tooltip must have only one child node. Please, check your code.\");\n  }\n  const { ref: tooltipRef, id, style, ...otherTooltipProps } = getTooltipProps();\n  const animatedContent = /* @__PURE__ */ jsx(\"div\", { ref: tooltipRef, id, style, children: /* @__PURE__ */ jsx(\n    motion.div,\n    {\n      animate: \"enter\",\n      exit: \"exit\",\n      initial: \"exit\",\n      variants: TRANSITION_VARIANTS.scaleSpring,\n      ...mergeProps(motionProps, otherTooltipProps),\n      style: {\n        ...getTransformOrigins(placement)\n      },\n      children: /* @__PURE__ */ jsx(Component, { ...getTooltipContentProps(), children: content })\n    }\n  ) });\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    trigger,\n    disableAnimation && isOpen ? /* @__PURE__ */ jsx(OverlayContainer, { portalContainer, children: /* @__PURE__ */ jsx(\"div\", { ref: tooltipRef, id, style, ...otherTooltipProps, children: /* @__PURE__ */ jsx(Component, { ...getTooltipContentProps(), children: content }) }) }) : /* @__PURE__ */ jsx(AnimatePresence, { children: isOpen ? /* @__PURE__ */ jsx(OverlayContainer, { portalContainer, children: animatedContent }) : null })\n  ] });\n});\nTooltip.displayName = \"NextUI.Tooltip\";\nvar tooltip_default = Tooltip;\n\nexport {\n  tooltip_default\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}