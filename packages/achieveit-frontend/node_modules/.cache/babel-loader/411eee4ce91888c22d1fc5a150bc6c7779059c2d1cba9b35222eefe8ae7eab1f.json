{"ast":null,"code":"import { useSlotId as $iD7q0$useSlotId, mergeProps as $iD7q0$mergeProps, useId as $iD7q0$useId, useLabels as $iD7q0$useLabels } from \"@react-aria/utils\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2021 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */ /*\n       * Copyright 2020 Adobe. All rights reserved.\n       * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n       * you may not use this file except in compliance with the License. You may obtain a copy\n       * of the License at http://www.apache.org/licenses/LICENSE-2.0\n       *\n       * Unless required by applicable law or agreed to in writing, software distributed under\n       * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n       * OF ANY KIND, either express or implied. See the License for the specific language\n       * governing permissions and limitations under the License.\n       */\nfunction $d191a55c9702f145$export$8467354a121f1b9f(props) {\n  let {\n    id: id,\n    label: label,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-label\": ariaLabel,\n    labelElementType = \"label\"\n  } = props;\n  id = (0, $iD7q0$useId)(id);\n  let labelId = (0, $iD7q0$useId)();\n  let labelProps = {};\n  if (label) {\n    ariaLabelledby = ariaLabelledby ? `${labelId} ${ariaLabelledby}` : labelId;\n    labelProps = {\n      id: labelId,\n      htmlFor: labelElementType === \"label\" ? id : undefined\n    };\n  } else if (!ariaLabelledby && !ariaLabel) console.warn(\"If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility\");\n  let fieldProps = (0, $iD7q0$useLabels)({\n    id: id,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby\n  });\n  return {\n    labelProps: labelProps,\n    fieldProps: fieldProps\n  };\n}\nfunction $2baaea4c71418dea$export$294aa081a6c6f55d(props) {\n  let {\n    description: description,\n    errorMessage: errorMessage,\n    isInvalid: isInvalid,\n    validationState: validationState\n  } = props;\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps\n  } = (0, $d191a55c9702f145$export$8467354a121f1b9f)(props);\n  let descriptionId = (0, $iD7q0$useSlotId)([Boolean(description), Boolean(errorMessage), isInvalid, validationState]);\n  let errorMessageId = (0, $iD7q0$useSlotId)([Boolean(description), Boolean(errorMessage), isInvalid, validationState]);\n  fieldProps = (0, $iD7q0$mergeProps)(fieldProps, {\n    \"aria-describedby\": [descriptionId,\n    // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA. See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268\n    errorMessageId, props[\"aria-describedby\"]].filter(Boolean).join(\" \") || undefined\n  });\n  return {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    descriptionProps: {\n      id: descriptionId\n    },\n    errorMessageProps: {\n      id: errorMessageId\n    }\n  };\n}\nexport { $2baaea4c71418dea$export$294aa081a6c6f55d as useField, $d191a55c9702f145$export$8467354a121f1b9f as useLabel };","map":{"version":3,"names":["$d191a55c9702f145$export$8467354a121f1b9f","props","id","label","ariaLabelledby","ariaLabel","labelElementType","$iD7q0$useId","labelId","labelProps","htmlFor","undefined","console","warn","fieldProps","$iD7q0$useLabels","$2baaea4c71418dea$export$294aa081a6c6f55d","description","errorMessage","isInvalid","validationState","descriptionId","$iD7q0$useSlotId","Boolean","errorMessageId","$iD7q0$mergeProps","filter","join","descriptionProps","errorMessageProps"],"sources":["C:\\Users\\joelp\\csc-307-achieveit\\AchieveIt\\node_modules\\@react-aria\\label\\dist\\packages\\@react-aria\\label\\src\\index.ts","C:\\Users\\joelp\\csc-307-achieveit\\AchieveIt\\node_modules\\@react-aria\\label\\dist\\packages\\@react-aria\\label\\src\\useField.ts","C:\\Users\\joelp\\csc-307-achieveit\\AchieveIt\\node_modules\\@react-aria\\label\\dist\\packages\\@react-aria\\label\\src\\useLabel.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport type {AriaFieldProps, FieldAria} from './useField';\nexport type {LabelAriaProps, LabelAria} from './useLabel';\n\nexport {useField} from './useField';\nexport {useLabel} from './useLabel';\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, HelpTextProps, Validation} from '@react-types/shared';\nimport {LabelAria, LabelAriaProps, useLabel} from './useLabel';\nimport {mergeProps, useSlotId} from '@react-aria/utils';\n\nexport interface AriaFieldProps extends LabelAriaProps, HelpTextProps, Omit<Validation<any>, 'isRequired'> {}\n\nexport interface FieldAria extends LabelAria {\n  /** Props for the description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the error message element, if any. */\n  errorMessageProps: DOMAttributes\n}\n\n/**\n * Provides the accessibility implementation for input fields.\n * Fields accept user input, gain context from their label, and may display a description or error message.\n * @param props - Props for the Field.\n */\nexport function useField(props: AriaFieldProps): FieldAria {\n  let {description, errorMessage, isInvalid, validationState} = props;\n  let {labelProps, fieldProps} = useLabel(props);\n\n  let descriptionId = useSlotId([Boolean(description), Boolean(errorMessage), isInvalid, validationState]);\n  let errorMessageId = useSlotId([Boolean(description), Boolean(errorMessage), isInvalid, validationState]);\n\n  fieldProps = mergeProps(fieldProps, {\n    'aria-describedby': [\n      descriptionId,\n      // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA. See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268\n      errorMessageId,\n      props['aria-describedby']\n    ].filter(Boolean).join(' ') || undefined\n  });\n\n  return {\n    labelProps,\n    fieldProps,\n    descriptionProps: {\n      id: descriptionId\n    },\n    errorMessageProps: {\n      id: errorMessageId\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMAttributes, DOMProps, LabelableProps} from '@react-types/shared';\nimport {ElementType, LabelHTMLAttributes} from 'react';\nimport {useId, useLabels} from '@react-aria/utils';\n\nexport interface LabelAriaProps extends LabelableProps, DOMProps, AriaLabelingProps {\n  /**\n   * The HTML element used to render the label, e.g. 'label', or 'span'.\n   * @default 'label'\n   */\n  labelElementType?: ElementType\n}\n\nexport interface LabelAria {\n  /** Props to apply to the label container element. */\n  labelProps: DOMAttributes | LabelHTMLAttributes<HTMLLabelElement>,\n  /** Props to apply to the field container element being labeled. */\n  fieldProps: AriaLabelingProps & DOMProps\n}\n\n/**\n * Provides the accessibility implementation for labels and their associated elements.\n * Labels provide context for user inputs.\n * @param props - The props for labels and fields.\n */\nexport function useLabel(props: LabelAriaProps): LabelAria {\n  let {\n    id,\n    label,\n    'aria-labelledby': ariaLabelledby,\n    'aria-label': ariaLabel,\n    labelElementType = 'label'\n  } = props;\n\n  id = useId(id);\n  let labelId = useId();\n  let labelProps = {};\n  if (label) {\n    ariaLabelledby = ariaLabelledby ? `${labelId} ${ariaLabelledby}` : labelId;\n    labelProps = {\n      id: labelId,\n      htmlFor: labelElementType === 'label' ? id : undefined\n    };\n  } else if (!ariaLabelledby && !ariaLabel) {\n    console.warn('If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility');\n  }\n\n  let fieldProps = useLabels({\n    id,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby\n  });\n\n  return {\n    labelProps,\n    fieldProps\n  };\n}\n"],"mappings":";;AAAA;;;;;;;;;;ACAA,GDAA,CCAA;;;;;;;;;;ACAA,MDAA,CCAA;;;;;;;;;;;AAoCO,SAASA,0CAASC,KAAqB;EAC5C,IAAI;IAAAC,EAAA,EACFA,EAAE;IAAAC,KAAA,EACFA,KAAK;IACL,mBAAmBC,cAAc;IACjC,cAAcC,SAAS;IACvBC,gBAAA,GAAmB;EAAA,CACpB,GAAGL,KAAA;EAEJC,EAAA,GAAK,IAAAK,YAAI,EAAEL,EAAA;EACX,IAAIM,OAAA,GAAU,IAAAD,YAAI;EAClB,IAAIE,UAAA,GAAa,CAAC;EAClB,IAAIN,KAAA,EAAO;IACTC,cAAA,GAAiBA,cAAA,GAAkB,GAAEI,OAAQ,IAAGJ,cAAe,EAAC,GAAGI,OAAA;IACnEC,UAAA,GAAa;MACXP,EAAA,EAAIM,OAAA;MACJE,OAAA,EAASJ,gBAAA,KAAqB,UAAUJ,EAAA,GAAKS;IAC/C;EACF,OAAO,IAAI,CAACP,cAAA,IAAkB,CAACC,SAAA,EAC7BO,OAAA,CAAQC,IAAI,CAAC;EAGf,IAAIC,UAAA,GAAa,IAAAC,gBAAQ,EAAE;QACzBb,EAAA;IACA,cAAcG,SAAA;IACd,mBAAmBD;EACrB;EAEA,OAAO;gBACLK,UAAA;gBACAK;EACF;AACF;ADtCO,SAASE,0CAASf,KAAqB;EAC5C,IAAI;IAAAgB,WAAA,EAACA,WAAW;IAAAC,YAAA,EAAEA,YAAY;IAAAC,SAAA,EAAEA,SAAS;IAAAC,eAAA,EAAEA;EAAe,CAAC,GAAGnB,KAAA;EAC9D,IAAI;IAAAQ,UAAA,EAACA,UAAU;IAAAK,UAAA,EAAEA;EAAU,CAAC,GAAG,IAAAd,yCAAO,EAAEC,KAAA;EAExC,IAAIoB,aAAA,GAAgB,IAAAC,gBAAQ,EAAE,CAACC,OAAA,CAAQN,WAAA,GAAcM,OAAA,CAAQL,YAAA,GAAeC,SAAA,EAAWC,eAAA,CAAgB;EACvG,IAAII,cAAA,GAAiB,IAAAF,gBAAQ,EAAE,CAACC,OAAA,CAAQN,WAAA,GAAcM,OAAA,CAAQL,YAAA,GAAeC,SAAA,EAAWC,eAAA,CAAgB;EAExGN,UAAA,GAAa,IAAAW,iBAAS,EAAEX,UAAA,EAAY;IAClC,oBAAoB,CAClBO,aAAA;IACA;IACAG,cAAA,EACAvB,KAAK,CAAC,mBAAmB,CAC1B,CAACyB,MAAM,CAACH,OAAA,EAASI,IAAI,CAAC,QAAQhB;EACjC;EAEA,OAAO;gBACLF,UAAA;gBACAK,UAAA;IACAc,gBAAA,EAAkB;MAChB1B,EAAA,EAAImB;IACN;IACAQ,iBAAA,EAAmB;MACjB3B,EAAA,EAAIsB;IACN;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}