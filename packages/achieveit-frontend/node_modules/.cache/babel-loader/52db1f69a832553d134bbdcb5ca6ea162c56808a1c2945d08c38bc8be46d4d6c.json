{"ast":null,"code":"var _jsxFileName = \"/Users/adavari/git/AchieveIt/packages/achieveit-frontend/src/TaskList.js\",\n  _s = $RefreshSig$();\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport Row from 'react-bootstrap/Row';\nimport Tab from 'react-bootstrap/Tab';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Stack from 'react-bootstrap/Stack';\nimport React, { useState } from 'react';\nimport ListTable from './ListTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList(props) {\n  _s();\n  const [listName, setListName] = useState('');\n  function updateListName(text) {\n    setListName(text);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Tab.Container, {\n      id: \"list-group-tabs-example\",\n      defaultActiveKey: '#AllTasks',\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              action: true,\n              href: '#AllTasks',\n              className: \"d-flex justify-content-between align-items-start\",\n              children: [\"All Tasks\", /*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"primary\",\n                pill: true,\n                children: props.numItems\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this)]\n            }, 'AllTasks', true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), props.lists.map(item => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              action: true,\n              href: `#${item.name}`,\n              className: \"d-flex justify-content-between align-items-start\",\n              children: [item.name, /*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"primary\",\n                pill: true,\n                children: item.items.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)]\n            }, item.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 8,\n          children: /*#__PURE__*/_jsxDEV(Tab.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: '#AllTasks',\n              children: /*#__PURE__*/_jsxDEV(ListTable, {\n                list: props.lists,\n                setChecked: props.setChecked,\n                insertTask: props.insertTask,\n                deleteTask: props.deleteTask,\n                deleteList: props.deleteList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, 'AllTasks', false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), props.lists.map(task => /*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: `#${task.name}`,\n              children: /*#__PURE__*/_jsxDEV(ListTable, {\n                listName: `${task.name}`,\n                list: [task],\n                setChecked: props.setChecked,\n                insertTask: props.insertTask,\n                deleteTask: props.deleteTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)\n            }, `${task.name}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      sm: 2,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"horizontal\",\n        gap: 2,\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          id: \"newList\",\n          \"aria-describedby\": \"helpBlock\",\n          placeholder: \"List Name\",\n          onChange: e => updateListName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: () => props.addList(listName),\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"mYAC1cwfenD5dFFyYZR4LXd4qjw=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["Col","ListGroup","Badge","Row","Tab","Form","Button","Stack","React","useState","ListTable","jsxDEV","_jsxDEV","TaskList","props","_s","listName","setListName","updateListName","text","children","Container","id","defaultActiveKey","sm","Item","action","href","className","bg","pill","numItems","fileName","_jsxFileName","lineNumber","columnNumber","lists","map","item","name","items","length","Content","Pane","eventKey","list","setChecked","insertTask","deleteTask","deleteList","task","direction","gap","Control","type","placeholder","onChange","e","target","value","variant","onClick","addList","_c","$RefreshReg$"],"sources":["/Users/adavari/git/AchieveIt/packages/achieveit-frontend/src/TaskList.js"],"sourcesContent":["import Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport Row from 'react-bootstrap/Row';\nimport Tab from 'react-bootstrap/Tab';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Stack from 'react-bootstrap/Stack';\nimport React, { useState } from 'react';\nimport ListTable from './ListTable';\n\nfunction TaskList(props) {\n  const [listName, setListName] = useState('');\n\n  function updateListName(text) {\n    setListName(text);\n  }\n\n  return (\n    <div>\n      <Tab.Container\n        id=\"list-group-tabs-example\"\n        defaultActiveKey={'#AllTasks'}\n      >\n        <Row>\n          <Col sm={2}>\n            <ListGroup>\n              <ListGroup.Item\n                key={'AllTasks'}\n                action\n                href={'#AllTasks'}\n                className=\"d-flex justify-content-between align-items-start\"\n              >\n                All Tasks\n                <Badge bg=\"primary\" pill>\n                  {props.numItems}\n                </Badge>\n              </ListGroup.Item>\n              {props.lists.map((item) => (\n                <ListGroup.Item\n                  key={item.name}\n                  action\n                  href={`#${item.name}`}\n                  className=\"d-flex justify-content-between align-items-start\"\n                >\n                  {item.name}\n                  <Badge bg=\"primary\" pill>\n                    {item.items.length}\n                  </Badge>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Col>\n          <Col sm={8}>\n            <Tab.Content>\n              <Tab.Pane key={'AllTasks'} eventKey={'#AllTasks'}>\n                <ListTable\n                  list={props.lists}\n                  setChecked={props.setChecked}\n                  insertTask={props.insertTask}\n                  deleteTask={props.deleteTask}\n                  deleteList={props.deleteList}\n                />\n              </Tab.Pane>\n              {props.lists.map((task) => (\n                <Tab.Pane key={`${task.name}`} eventKey={`#${task.name}`}>\n                  <ListTable\n                    listName={`${task.name}`}\n                    list={[task]}\n                    setChecked={props.setChecked}\n                    insertTask={props.insertTask}\n                    deleteTask={props.deleteTask}\n                  />\n                </Tab.Pane>\n              ))}\n            </Tab.Content>\n          </Col>\n        </Row>\n      </Tab.Container>\n      <Col sm={2}>\n        <Stack direction=\"horizontal\" gap={2}>\n          <Form.Control\n            type=\"text\"\n            id=\"newList\"\n            aria-describedby=\"helpBlock\"\n            placeholder=\"List Name\"\n            onChange={(e) => updateListName(e.target.value)}\n          />\n          <Button variant=\"dark\" onClick={() => props.addList(listName)}>\n            Create\n          </Button>\n        </Stack>\n      </Col>\n    </div>\n  );\n}\n\nexport default TaskList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}