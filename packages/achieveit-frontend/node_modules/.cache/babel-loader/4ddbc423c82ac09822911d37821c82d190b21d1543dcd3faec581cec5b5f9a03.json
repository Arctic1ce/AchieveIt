{"ast":null,"code":"\"use client\";\n\n// src/use-slider-thumb.ts\nimport { useSliderThumb as useAriaSliderThumb } from \"@react-aria/slider\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { useRef } from \"react\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { usePress } from \"@nextui-org/use-aria-press\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { dataAttr } from \"@nextui-org/shared-utils\";\nimport { useNumberFormatter } from \"@react-aria/i18n\";\nfunction useSliderThumb(props) {\n  const {\n    ref,\n    as,\n    state,\n    index,\n    name,\n    trackRef,\n    className,\n    tooltipProps,\n    isVertical,\n    showTooltip,\n    formatOptions,\n    renderThumb,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const inputRef = useRef(null);\n  const numberFormatter = useNumberFormatter(formatOptions);\n  const {\n    thumbProps,\n    inputProps,\n    isDragging,\n    isFocused\n  } = useAriaSliderThumb({\n    index,\n    trackRef,\n    inputRef,\n    name,\n    ...otherProps\n  }, state);\n  const {\n    hoverProps,\n    isHovered\n  } = useHover({\n    isDisabled: state.isDisabled\n  });\n  const {\n    focusProps,\n    isFocusVisible\n  } = useFocusRing();\n  const {\n    pressProps,\n    isPressed\n  } = usePress({\n    isDisabled: state.isDisabled\n  });\n  const getThumbProps = (props2 = {}) => {\n    return {\n      ref: domRef,\n      \"data-slot\": \"thumb\",\n      \"data-hover\": dataAttr(isHovered),\n      \"data-pressed\": dataAttr(isPressed),\n      \"data-dragging\": dataAttr(isDragging),\n      \"data-focused\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocusVisible),\n      ...mergeProps(thumbProps, pressProps, hoverProps, otherProps),\n      className,\n      ...props2\n    };\n  };\n  const getTooltipProps = () => {\n    const value = numberFormatter ? numberFormatter.format(state.values[index != null ? index : 0]) : state.values[index != null ? index : 0];\n    return {\n      ...tooltipProps,\n      placement: (tooltipProps == null ? void 0 : tooltipProps.placement) ? tooltipProps == null ? void 0 : tooltipProps.placement : isVertical ? \"right\" : \"top\",\n      content: (tooltipProps == null ? void 0 : tooltipProps.content) ? tooltipProps == null ? void 0 : tooltipProps.content : value,\n      updatePositionDeps: [isDragging, isHovered, value],\n      isOpen: (tooltipProps == null ? void 0 : tooltipProps.isOpen) !== void 0 ? tooltipProps == null ? void 0 : tooltipProps.isOpen : isHovered || isDragging\n    };\n  };\n  const getInputProps = (props2 = {}) => {\n    return {\n      ref: inputRef,\n      ...mergeProps(inputProps, focusProps),\n      ...props2\n    };\n  };\n  return {\n    Component,\n    index,\n    showTooltip,\n    renderThumb,\n    getThumbProps,\n    getTooltipProps,\n    getInputProps\n  };\n}\nexport { useSliderThumb };","map":{"version":3,"names":["useSliderThumb","useAriaSliderThumb","useDOMRef","useRef","useHover","usePress","useFocusRing","mergeProps","dataAttr","useNumberFormatter","props","ref","as","state","index","name","trackRef","className","tooltipProps","isVertical","showTooltip","formatOptions","renderThumb","otherProps","Component","domRef","inputRef","numberFormatter","thumbProps","inputProps","isDragging","isFocused","hoverProps","isHovered","isDisabled","focusProps","isFocusVisible","pressProps","isPressed","getThumbProps","props2","getTooltipProps","value","format","values","placement","content","updatePositionDeps","isOpen","getInputProps"],"sources":["C:/Users/joelp/csc-307-achieveit/AchieveIt/node_modules/@nextui-org/slider/dist/chunk-Z44VGL7D.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-slider-thumb.ts\nimport { useSliderThumb as useAriaSliderThumb } from \"@react-aria/slider\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { useRef } from \"react\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { usePress } from \"@nextui-org/use-aria-press\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { dataAttr } from \"@nextui-org/shared-utils\";\nimport { useNumberFormatter } from \"@react-aria/i18n\";\nfunction useSliderThumb(props) {\n  const {\n    ref,\n    as,\n    state,\n    index,\n    name,\n    trackRef,\n    className,\n    tooltipProps,\n    isVertical,\n    showTooltip,\n    formatOptions,\n    renderThumb,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const inputRef = useRef(null);\n  const numberFormatter = useNumberFormatter(formatOptions);\n  const { thumbProps, inputProps, isDragging, isFocused } = useAriaSliderThumb(\n    {\n      index,\n      trackRef,\n      inputRef,\n      name,\n      ...otherProps\n    },\n    state\n  );\n  const { hoverProps, isHovered } = useHover({\n    isDisabled: state.isDisabled\n  });\n  const { focusProps, isFocusVisible } = useFocusRing();\n  const { pressProps, isPressed } = usePress({\n    isDisabled: state.isDisabled\n  });\n  const getThumbProps = (props2 = {}) => {\n    return {\n      ref: domRef,\n      \"data-slot\": \"thumb\",\n      \"data-hover\": dataAttr(isHovered),\n      \"data-pressed\": dataAttr(isPressed),\n      \"data-dragging\": dataAttr(isDragging),\n      \"data-focused\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocusVisible),\n      ...mergeProps(thumbProps, pressProps, hoverProps, otherProps),\n      className,\n      ...props2\n    };\n  };\n  const getTooltipProps = () => {\n    const value = numberFormatter ? numberFormatter.format(state.values[index != null ? index : 0]) : state.values[index != null ? index : 0];\n    return {\n      ...tooltipProps,\n      placement: (tooltipProps == null ? void 0 : tooltipProps.placement) ? tooltipProps == null ? void 0 : tooltipProps.placement : isVertical ? \"right\" : \"top\",\n      content: (tooltipProps == null ? void 0 : tooltipProps.content) ? tooltipProps == null ? void 0 : tooltipProps.content : value,\n      updatePositionDeps: [isDragging, isHovered, value],\n      isOpen: (tooltipProps == null ? void 0 : tooltipProps.isOpen) !== void 0 ? tooltipProps == null ? void 0 : tooltipProps.isOpen : isHovered || isDragging\n    };\n  };\n  const getInputProps = (props2 = {}) => {\n    return {\n      ref: inputRef,\n      ...mergeProps(inputProps, focusProps),\n      ...props2\n    };\n  };\n  return {\n    Component,\n    index,\n    showTooltip,\n    renderThumb,\n    getThumbProps,\n    getTooltipProps,\n    getInputProps\n  };\n}\n\nexport {\n  useSliderThumb\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}