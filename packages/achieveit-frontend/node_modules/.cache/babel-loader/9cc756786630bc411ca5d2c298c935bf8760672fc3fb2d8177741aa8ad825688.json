{"ast":null,"code":"\"use client\";\n\n// src/use-circular-progress.ts\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { circularProgress } from \"@nextui-org/theme\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clampPercentage, clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useMemo, useCallback } from \"react\";\nimport { useIsMounted } from \"@nextui-org/use-is-mounted\";\nimport { useProgressBar as useAriaProgress } from \"@react-aria/progress\";\nfunction useCircularProgress(originalProps) {\n  var _a;\n  const [props, variantProps] = mapPropsVariants(originalProps, circularProgress.variantKeys);\n  const {\n    ref,\n    as,\n    id,\n    className,\n    classNames,\n    label,\n    valueLabel,\n    value = void 0,\n    minValue = 0,\n    maxValue = 100,\n    strokeWidth: strokeWidthProp,\n    showValueLabel = false,\n    formatOptions = {\n      style: \"percent\"\n    },\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const [, isMounted] = useIsMounted({\n    rerender: true,\n    delay: 100\n  });\n  const isIndeterminate = ((_a = originalProps.isIndeterminate) != null ? _a : true) && value === void 0;\n  const {\n    progressBarProps,\n    labelProps\n  } = useAriaProgress({\n    id,\n    label,\n    value,\n    minValue,\n    maxValue,\n    valueLabel,\n    formatOptions,\n    isIndeterminate,\n    \"aria-labelledby\": originalProps[\"aria-labelledby\"],\n    \"aria-label\": originalProps[\"aria-label\"]\n  });\n  const slots = useMemo(() => circularProgress({\n    ...variantProps,\n    isIndeterminate\n  }), [isIndeterminate, ...Object.values(variantProps)]);\n  const selfMounted = originalProps.disableAnimation ? true : isMounted;\n  const center = 16;\n  const strokeWidth = strokeWidthProp || originalProps.size === \"sm\" ? 2 : 3;\n  const radius = 16 - strokeWidth;\n  const circumference = 2 * radius * Math.PI;\n  const percentage = useMemo(() => {\n    if (!selfMounted) {\n      return 0;\n    }\n    if (isIndeterminate) {\n      return 0.25;\n    }\n    return value ? clampPercentage((value - minValue) / (maxValue - minValue), 1) : 0;\n  }, [selfMounted, value, minValue, maxValue, isIndeterminate]);\n  const offset = circumference - percentage * circumference;\n  const getProgressBarProps = useCallback((props2 = {}) => ({\n    ref: domRef,\n    \"data-indeterminate\": dataAttr(isIndeterminate),\n    \"data-disabled\": dataAttr(originalProps.isDisabled),\n    className: slots.base({\n      class: baseStyles\n    }),\n    ...mergeProps(progressBarProps, otherProps, props2)\n  }), [domRef, slots, isIndeterminate, originalProps.isDisabled, baseStyles, progressBarProps, otherProps]);\n  const getLabelProps = useCallback((props2 = {}) => ({\n    className: slots.label({\n      class: classNames == null ? void 0 : classNames.label\n    }),\n    ...mergeProps(labelProps, props2)\n  }), [slots, classNames, labelProps]);\n  const getSvgProps = useCallback((props2 = {}) => ({\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    strokeWidth,\n    className: slots.svg({\n      class: classNames == null ? void 0 : classNames.svg\n    }),\n    ...props2\n  }), [strokeWidth, slots, classNames]);\n  const getIndicatorProps = useCallback((props2 = {}) => ({\n    cx: center,\n    cy: center,\n    r: radius,\n    role: \"presentation\",\n    strokeDasharray: `${circumference} ${circumference}`,\n    strokeDashoffset: offset,\n    transform: \"rotate(-90 16 16)\",\n    strokeLinecap: \"round\",\n    className: slots.indicator({\n      class: classNames == null ? void 0 : classNames.indicator\n    }),\n    ...props2\n  }), [slots, classNames, offset, circumference, radius]);\n  const getTrackProps = useCallback((props2 = {}) => ({\n    cx: center,\n    cy: center,\n    r: radius,\n    role: \"presentation\",\n    strokeDasharray: `${circumference} ${circumference}`,\n    strokeDashoffset: 0,\n    transform: \"rotate(-90 16 16)\",\n    strokeLinecap: \"round\",\n    className: slots.track({\n      class: classNames == null ? void 0 : classNames.track\n    }),\n    ...props2\n  }), [slots, classNames, circumference, radius]);\n  return {\n    Component,\n    domRef,\n    slots,\n    classNames,\n    label,\n    showValueLabel,\n    getProgressBarProps,\n    getLabelProps,\n    getSvgProps,\n    getIndicatorProps,\n    getTrackProps\n  };\n}\nexport { useCircularProgress };","map":{"version":3,"names":["mapPropsVariants","circularProgress","useDOMRef","clampPercentage","clsx","dataAttr","mergeProps","useMemo","useCallback","useIsMounted","useProgressBar","useAriaProgress","useCircularProgress","originalProps","_a","props","variantProps","variantKeys","ref","as","id","className","classNames","label","valueLabel","value","minValue","maxValue","strokeWidth","strokeWidthProp","showValueLabel","formatOptions","style","otherProps","Component","domRef","baseStyles","base","isMounted","rerender","delay","isIndeterminate","progressBarProps","labelProps","slots","Object","values","selfMounted","disableAnimation","center","size","radius","circumference","Math","PI","percentage","offset","getProgressBarProps","props2","isDisabled","class","getLabelProps","getSvgProps","viewBox","fill","svg","getIndicatorProps","cx","cy","r","role","strokeDasharray","strokeDashoffset","transform","strokeLinecap","indicator","getTrackProps","track"],"sources":["C:/Users/joelp/csc-307-achieveit/AchieveIt/node_modules/@nextui-org/progress/dist/chunk-5KKY3VCP.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-circular-progress.ts\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { circularProgress } from \"@nextui-org/theme\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clampPercentage, clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useMemo, useCallback } from \"react\";\nimport { useIsMounted } from \"@nextui-org/use-is-mounted\";\nimport { useProgressBar as useAriaProgress } from \"@react-aria/progress\";\nfunction useCircularProgress(originalProps) {\n  var _a;\n  const [props, variantProps] = mapPropsVariants(originalProps, circularProgress.variantKeys);\n  const {\n    ref,\n    as,\n    id,\n    className,\n    classNames,\n    label,\n    valueLabel,\n    value = void 0,\n    minValue = 0,\n    maxValue = 100,\n    strokeWidth: strokeWidthProp,\n    showValueLabel = false,\n    formatOptions = {\n      style: \"percent\"\n    },\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const [, isMounted] = useIsMounted({\n    rerender: true,\n    delay: 100\n  });\n  const isIndeterminate = ((_a = originalProps.isIndeterminate) != null ? _a : true) && value === void 0;\n  const { progressBarProps, labelProps } = useAriaProgress({\n    id,\n    label,\n    value,\n    minValue,\n    maxValue,\n    valueLabel,\n    formatOptions,\n    isIndeterminate,\n    \"aria-labelledby\": originalProps[\"aria-labelledby\"],\n    \"aria-label\": originalProps[\"aria-label\"]\n  });\n  const slots = useMemo(\n    () => circularProgress({\n      ...variantProps,\n      isIndeterminate\n    }),\n    [isIndeterminate, ...Object.values(variantProps)]\n  );\n  const selfMounted = originalProps.disableAnimation ? true : isMounted;\n  const center = 16;\n  const strokeWidth = strokeWidthProp || originalProps.size === \"sm\" ? 2 : 3;\n  const radius = 16 - strokeWidth;\n  const circumference = 2 * radius * Math.PI;\n  const percentage = useMemo(() => {\n    if (!selfMounted) {\n      return 0;\n    }\n    if (isIndeterminate) {\n      return 0.25;\n    }\n    return value ? clampPercentage((value - minValue) / (maxValue - minValue), 1) : 0;\n  }, [selfMounted, value, minValue, maxValue, isIndeterminate]);\n  const offset = circumference - percentage * circumference;\n  const getProgressBarProps = useCallback(\n    (props2 = {}) => ({\n      ref: domRef,\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(originalProps.isDisabled),\n      className: slots.base({ class: baseStyles }),\n      ...mergeProps(progressBarProps, otherProps, props2)\n    }),\n    [\n      domRef,\n      slots,\n      isIndeterminate,\n      originalProps.isDisabled,\n      baseStyles,\n      progressBarProps,\n      otherProps\n    ]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.label({ class: classNames == null ? void 0 : classNames.label }),\n      ...mergeProps(labelProps, props2)\n    }),\n    [slots, classNames, labelProps]\n  );\n  const getSvgProps = useCallback(\n    (props2 = {}) => ({\n      viewBox: \"0 0 32 32\",\n      fill: \"none\",\n      strokeWidth,\n      className: slots.svg({ class: classNames == null ? void 0 : classNames.svg }),\n      ...props2\n    }),\n    [strokeWidth, slots, classNames]\n  );\n  const getIndicatorProps = useCallback(\n    (props2 = {}) => ({\n      cx: center,\n      cy: center,\n      r: radius,\n      role: \"presentation\",\n      strokeDasharray: `${circumference} ${circumference}`,\n      strokeDashoffset: offset,\n      transform: \"rotate(-90 16 16)\",\n      strokeLinecap: \"round\",\n      className: slots.indicator({ class: classNames == null ? void 0 : classNames.indicator }),\n      ...props2\n    }),\n    [slots, classNames, offset, circumference, radius]\n  );\n  const getTrackProps = useCallback(\n    (props2 = {}) => ({\n      cx: center,\n      cy: center,\n      r: radius,\n      role: \"presentation\",\n      strokeDasharray: `${circumference} ${circumference}`,\n      strokeDashoffset: 0,\n      transform: \"rotate(-90 16 16)\",\n      strokeLinecap: \"round\",\n      className: slots.track({ class: classNames == null ? void 0 : classNames.track }),\n      ...props2\n    }),\n    [slots, classNames, circumference, radius]\n  );\n  return {\n    Component,\n    domRef,\n    slots,\n    classNames,\n    label,\n    showValueLabel,\n    getProgressBarProps,\n    getLabelProps,\n    getSvgProps,\n    getIndicatorProps,\n    getTrackProps\n  };\n}\n\nexport {\n  useCircularProgress\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}