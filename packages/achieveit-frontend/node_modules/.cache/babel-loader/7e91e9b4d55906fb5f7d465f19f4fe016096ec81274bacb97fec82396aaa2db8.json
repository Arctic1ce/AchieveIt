{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joelp\\\\csc-307-achieveit\\\\AchieveIt\\\\packages\\\\achieveit-frontend\\\\src\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport Row from 'react-bootstrap/Row';\n// import Tab from 'react-bootstrap/Tab';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Stack from 'react-bootstrap/Stack';\nimport React, { useState } from 'react';\nimport ListTable from './ListTable';\nimport { Tabs, Tab } from '@nextui-org/react';\nimport { Divider } from '@nextui-org/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList(props) {\n  _s();\n  const [listName, setListName] = useState('');\n  function updateListName(text) {\n    setListName(text);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          \"aria-label\": \"Dynamic tabs\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            title: 'AllTasks',\n            children: [/*#__PURE__*/_jsxDEV(Divider, {\n              orientation: \"vertical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListTable, {\n              list: props.lists,\n              setChecked: props.setChecked,\n              insertTask: props.insertTask,\n              deleteTask: props.deleteTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, 'AllTasks', true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), props.lists.map(list => /*#__PURE__*/_jsxDEV(Tab, {\n            title: list.name,\n            children: /*#__PURE__*/_jsxDEV(ListTable, {\n              listName: `${list.name}`,\n              list: [list],\n              setChecked: props.setChecked,\n              insertTask: props.insertTask,\n              deleteTask: props.deleteTask,\n              deleteList: props.deleteList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)\n          }, list.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"mYAC1cwfenD5dFFyYZR4LXd4qjw=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["Col","ListGroup","Badge","Row","Form","Button","Stack","React","useState","ListTable","Tabs","Tab","Divider","jsxDEV","_jsxDEV","TaskList","props","_s","listName","setListName","updateListName","text","children","sm","title","orientation","fileName","_jsxFileName","lineNumber","columnNumber","list","lists","setChecked","insertTask","deleteTask","map","name","deleteList","_c","$RefreshReg$"],"sources":["C:/Users/joelp/csc-307-achieveit/AchieveIt/packages/achieveit-frontend/src/TaskList.js"],"sourcesContent":["import Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Row from 'react-bootstrap/Row';\r\n// import Tab from 'react-bootstrap/Tab';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport React, { useState } from 'react';\r\nimport ListTable from './ListTable';\r\nimport { Tabs, Tab } from '@nextui-org/react';\r\nimport { Divider } from '@nextui-org/react';\r\nfunction TaskList(props) {\r\n  const [listName, setListName] = useState('');\r\n\r\n  function updateListName(text) {\r\n    setListName(text);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col sm={2}>\r\n          <Tabs aria-label=\"Dynamic tabs\">\r\n            <Tab key={'AllTasks'} title={'AllTasks'}>\r\n              <Divider orientation=\"vertical\" />\r\n\r\n              <ListTable\r\n                list={props.lists}\r\n                setChecked={props.setChecked}\r\n                insertTask={props.insertTask}\r\n                deleteTask={props.deleteTask}\r\n              />\r\n            </Tab>\r\n            {props.lists.map((list) => (\r\n              <Tab key={list.name} title={list.name}>\r\n                <ListTable\r\n                  listName={`${list.name}`}\r\n                  list={[list]}\r\n                  setChecked={props.setChecked}\r\n                  insertTask={props.insertTask}\r\n                  deleteTask={props.deleteTask}\r\n                  deleteList={props.deleteList}\r\n                />\r\n              </Tab>\r\n            ))}\r\n          </Tabs>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* <Tab.Container\r\n        id=\"list-group-tabs-example\"\r\n        defaultActiveKey={'#AllTasks'}>\r\n        <Row>\r\n          <Col sm={2}>\r\n            <ListGroup>\r\n              <ListGroup.Item\r\n                key={'AllTasks'}\r\n                action\r\n                href={'#AllTasks'}\r\n                className=\"d-flex justify-content-between align-items-start\">\r\n                All Tasks\r\n                <Badge bg=\"primary\" pill>\r\n                  {props.numItems}\r\n                </Badge>\r\n              </ListGroup.Item>\r\n              {props.lists.map((item) => (\r\n                <ListGroup.Item\r\n                  key={item.name}\r\n                  action\r\n                  href={`#${item.name}`}\r\n                  className=\"d-flex justify-content-between align-items-start\">\r\n                  {item.name}\r\n                  <Badge bg=\"primary\" pill>\r\n                    {item.items.length}\r\n                  </Badge>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          </Col>\r\n          <Col sm={8}>\r\n            <Tab.Content>\r\n              <Tab.Pane key={'AllTasks'} eventKey={'#AllTasks'}>\r\n                <ListTable\r\n                  list={props.lists}\r\n                  setChecked={props.setChecked}\r\n                  insertTask={props.insertTask}\r\n                  deleteTask={props.deleteTask}\r\n                />\r\n              </Tab.Pane>\r\n              {props.lists.map((task) => (\r\n                <Tab.Pane key={`${task.name}`} eventKey={`#${task.name}`}>\r\n                  <ListTable\r\n                    listName={`${task.name}`}\r\n                    list={[task]}\r\n                    setChecked={props.setChecked}\r\n                    insertTask={props.insertTask}\r\n                    deleteTask={props.deleteTask}\r\n                    deleteList={props.deleteList}\r\n                  />\r\n                </Tab.Pane>\r\n              ))}\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n      <Col sm={2}>\r\n        <Stack direction=\"horizontal\" gap={2}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            id=\"newList\"\r\n            aria-describedby=\"helpBlock\"\r\n            placeholder=\"List Name\"\r\n            onChange={(e) => updateListName(e.target.value)}\r\n          />\r\n          <Button variant=\"dark\" onClick={() => props.addList(listName)}>\r\n            Create\r\n          </Button>\r\n        </Stack>\r\n      </Col> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}