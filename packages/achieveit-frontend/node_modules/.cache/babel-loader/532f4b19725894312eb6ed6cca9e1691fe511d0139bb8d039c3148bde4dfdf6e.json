{"ast":null,"code":"\"use client\";\n\n// src/use-breadcrumb-item.ts\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { breadcrumbItem } from \"@nextui-org/theme\";\nimport { filterDOMProps, useDOMRef } from \"@nextui-org/react-utils\";\nimport { useBreadcrumbItem as useAriaBreadcrumbItem } from \"@react-aria/breadcrumbs\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useMemo } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\nfunction useBreadcrumbItem(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, breadcrumbItem.variantKeys);\n  const {\n    ref,\n    as,\n    className,\n    children,\n    isLast,\n    separator,\n    startContent,\n    endContent,\n    classNames,\n    hideSeparator = false,\n    ...otherProps\n  } = props;\n  const WrapperComponent = as || \"li\";\n  const isCurrent = !!(originalProps == null ? void 0 : originalProps.isCurrent);\n  const isDisabled = originalProps == null ? void 0 : originalProps.isDisabled;\n  const Component = (originalProps == null ? void 0 : originalProps.href) && !isCurrent ? \"a\" : \"span\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const {\n    itemProps\n  } = useAriaBreadcrumbItem({\n    ...originalProps,\n    isCurrent,\n    elementType: Component\n  }, domRef);\n  const {\n    isFocusVisible,\n    isFocused,\n    focusProps\n  } = useFocusRing();\n  const slots = useMemo(() => breadcrumbItem({\n    ...variantProps,\n    isCurrent,\n    underline: (originalProps == null ? void 0 : originalProps.underline) !== void 0 && !isCurrent ? originalProps == null ? void 0 : originalProps.underline : \"none\",\n    className\n  }), [...Object.values(variantProps), isCurrent, className]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getBaseProps = () => ({\n    ref: domRef,\n    \"data-slot\": \"base\",\n    className: slots.base({\n      class: baseStyles\n    }),\n    ...filterDOMProps(otherProps, {\n      enabled: shouldFilterDOMProps\n    })\n  });\n  const getItemProps = () => ({\n    href: !isCurrent ? originalProps == null ? void 0 : originalProps.href : void 0,\n    \"data-slot\": \"item\",\n    \"data-focus\": dataAttr(isFocused),\n    \"data-focus-visible\": dataAttr(isFocusVisible),\n    \"data-disabled\": originalProps == null ? void 0 : originalProps.isDisabled,\n    \"data-current\": originalProps == null ? void 0 : originalProps.isCurrent,\n    className: slots.item({\n      class: classNames == null ? void 0 : classNames.item\n    }),\n    ...mergeProps(itemProps, isDisabled ? {} : focusProps)\n  });\n  const getSeparatorProps = () => ({\n    \"data-slot\": \"separator\",\n    \"aria-hidden\": dataAttr(true),\n    className: slots.separator({\n      class: classNames == null ? void 0 : classNames.separator\n    })\n  });\n  return {\n    Component,\n    WrapperComponent,\n    children,\n    separator,\n    startContent,\n    endContent,\n    isDisabled,\n    isCurrent,\n    isLast,\n    hideSeparator,\n    getBaseProps,\n    getItemProps,\n    getSeparatorProps\n  };\n}\nexport { useBreadcrumbItem };","map":{"version":3,"names":["mapPropsVariants","useFocusRing","breadcrumbItem","filterDOMProps","useDOMRef","useBreadcrumbItem","useAriaBreadcrumbItem","clsx","dataAttr","useMemo","mergeProps","originalProps","props","variantProps","variantKeys","ref","as","className","children","isLast","separator","startContent","endContent","classNames","hideSeparator","otherProps","WrapperComponent","isCurrent","isDisabled","Component","href","shouldFilterDOMProps","domRef","itemProps","elementType","isFocusVisible","isFocused","focusProps","slots","underline","Object","values","baseStyles","base","getBaseProps","class","enabled","getItemProps","item","getSeparatorProps"],"sources":["C:/Users/joelp/csc-307-achieveit/AchieveIt/node_modules/@nextui-org/breadcrumbs/dist/chunk-YITIALYS.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-breadcrumb-item.ts\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { breadcrumbItem } from \"@nextui-org/theme\";\nimport { filterDOMProps, useDOMRef } from \"@nextui-org/react-utils\";\nimport { useBreadcrumbItem as useAriaBreadcrumbItem } from \"@react-aria/breadcrumbs\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useMemo } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\nfunction useBreadcrumbItem(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, breadcrumbItem.variantKeys);\n  const {\n    ref,\n    as,\n    className,\n    children,\n    isLast,\n    separator,\n    startContent,\n    endContent,\n    classNames,\n    hideSeparator = false,\n    ...otherProps\n  } = props;\n  const WrapperComponent = as || \"li\";\n  const isCurrent = !!(originalProps == null ? void 0 : originalProps.isCurrent);\n  const isDisabled = originalProps == null ? void 0 : originalProps.isDisabled;\n  const Component = (originalProps == null ? void 0 : originalProps.href) && !isCurrent ? \"a\" : \"span\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const { itemProps } = useAriaBreadcrumbItem(\n    { ...originalProps, isCurrent, elementType: Component },\n    domRef\n  );\n  const { isFocusVisible, isFocused, focusProps } = useFocusRing();\n  const slots = useMemo(\n    () => breadcrumbItem({\n      ...variantProps,\n      isCurrent,\n      underline: (originalProps == null ? void 0 : originalProps.underline) !== void 0 && !isCurrent ? originalProps == null ? void 0 : originalProps.underline : \"none\",\n      className\n    }),\n    [...Object.values(variantProps), isCurrent, className]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getBaseProps = () => ({\n    ref: domRef,\n    \"data-slot\": \"base\",\n    className: slots.base({ class: baseStyles }),\n    ...filterDOMProps(otherProps, {\n      enabled: shouldFilterDOMProps\n    })\n  });\n  const getItemProps = () => ({\n    href: !isCurrent ? originalProps == null ? void 0 : originalProps.href : void 0,\n    \"data-slot\": \"item\",\n    \"data-focus\": dataAttr(isFocused),\n    \"data-focus-visible\": dataAttr(isFocusVisible),\n    \"data-disabled\": originalProps == null ? void 0 : originalProps.isDisabled,\n    \"data-current\": originalProps == null ? void 0 : originalProps.isCurrent,\n    className: slots.item({ class: classNames == null ? void 0 : classNames.item }),\n    ...mergeProps(itemProps, isDisabled ? {} : focusProps)\n  });\n  const getSeparatorProps = () => ({\n    \"data-slot\": \"separator\",\n    \"aria-hidden\": dataAttr(true),\n    className: slots.separator({ class: classNames == null ? void 0 : classNames.separator })\n  });\n  return {\n    Component,\n    WrapperComponent,\n    children,\n    separator,\n    startContent,\n    endContent,\n    isDisabled,\n    isCurrent,\n    isLast,\n    hideSeparator,\n    getBaseProps,\n    getItemProps,\n    getSeparatorProps\n  };\n}\n\nexport {\n  useBreadcrumbItem\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}