{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joelp\\\\csc-307-achieveit\\\\AchieveIt\\\\packages\\\\achieveit-frontend\\\\src\\\\ListTable.js\",\n  _s = $RefreshSig$();\n// import Table from 'react-bootstrap/Table';\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport NewItem from './NewItem';\nimport { Button } from '@nextui-org/react';\nimport { Table, TableHeader, TableBody, TableColumn, TableRow, TableCell } from '@nextui-org/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListTable(props) {\n  _s();\n  const listItemStyle = {\n    textDecoration: 'line-through',\n    marginBottom: '8px',\n    color: '#ff0000'\n  };\n  const [selectedKeys, setSelectedKeys] = React.useState(new Set(['2']));\n\n  //{{}}\n\n  const handleSelect = event => {\n    setSelectedKeys();\n    event.target.style = listItemStyle;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewItem, {\n      insertTask: props.insertTask,\n      list: props.list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      selectionMode: \"multiple\",\n      selectedKeys: selectedKeys,\n      onSelectionChange: handleSelect,\n      \"aria-label\": \"Example static collection table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n        children: [/*#__PURE__*/_jsxDEV(TableColumn, {\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableColumn, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableColumn, {\n          children: \"Due Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableColumn, {\n          children: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableColumn, {\n          children: \"List Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        emptyContent: 'No rows to display.',\n        children: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), props.list.map(list => /*#__PURE__*/_jsxDEV(TableBody, {\n        items: list.items,\n        children: val => /*#__PURE__*/_jsxDEV(TableRow, {\n          \"data-selected\": val.completed,\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: val.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: val.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: val.due_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: val.priority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: list.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, `${list._id}-${val._id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n//   return (\n//     <div>\n//       <NewItem insertTask={props.insertTask} list={props.list} />\n//       <Table striped bordered hover>\n//         <thead>\n//           <tr>\n//             <th></th>\n//             <th>Task</th>\n//             <th>Description</th>\n//             <th>Due Date</th>\n//             <th>Priority</th>\n//             <th>List Name</th>\n//           </tr>\n//         </thead>\n\n//         {props.list.map((item) => {\n//           return (\n//             <tbody key={`${item.name}`}>\n//               {item.items.map((val) => (\n//                 <tr key={`${item.name}`}>\n//                   <td>\n//                     <Form>\n//                       <Form.Check\n//                         type={'checkbox'}\n//                         id={`default-checkbox`}\n//                         checked={val.completed}\n//                         onChange={() =>\n//                           props.setChecked(item.name, val.name, !val.completed)\n//                         }\n//                       />\n//                     </Form>\n//                   </td>\n//                   {!val.completed && <td>{val.name}</td>}\n//                   {!val.completed && <td>{val.description}</td>}\n//                   {!val.completed && <td>{val.due_date}</td>}\n//                   {!val.completed && <td>{val.priority}</td>}\n//                   {!val.completed && <td>{item.name}</td>}\n\n//                   {val.completed && <td style={listItemStyle}>{val.name}</td>}\n//                   {val.completed && (\n//                     <td style={listItemStyle}>{val.description}</td>\n//                   )}\n//                   {val.completed && (\n//                     <td style={listItemStyle}>{val.due_date}</td>\n//                   )}\n//                   {val.completed && (\n//                     <td style={listItemStyle}>{val.priority}</td>\n//                   )}\n//                   {val.completed && <td style={listItemStyle}>{item.name}</td>}\n//                   {/*    Button to delete item*/}\n//                   <td>\n//                     <Button\n//                       variant=\"dark\"\n//                       onClick={() => props.deleteTask(item.name, val.name)}\n//                       className=\"me-2\">\n//                       Delete\n//                     </Button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           );\n//         })}\n//       </Table>\n//       {props.list.length === 1 && (\n//         <Button\n//           variant=\"dark\"\n//           onClick={() => props.deleteList(props.list[0].name)}\n//           className=\"me-2\">\n//           Delete List\n//         </Button>\n//       )}\n//     </div>\n//   );\n// }\n_s(ListTable, \"ZIUfCPAZ1dSPbfpU639OxhtmFq8=\");\n_c = ListTable;\nexport default ListTable;\nvar _c;\n$RefreshReg$(_c, \"ListTable\");","map":{"version":3,"names":["React","useState","Form","NewItem","Button","Table","TableHeader","TableBody","TableColumn","TableRow","TableCell","jsxDEV","_jsxDEV","ListTable","props","_s","listItemStyle","textDecoration","marginBottom","color","selectedKeys","setSelectedKeys","Set","handleSelect","event","target","style","children","insertTask","list","fileName","_jsxFileName","lineNumber","columnNumber","selectionMode","onSelectionChange","emptyContent","map","items","val","completed","name","description","due_date","priority","_id","_c","$RefreshReg$"],"sources":["C:/Users/joelp/csc-307-achieveit/AchieveIt/packages/achieveit-frontend/src/ListTable.js"],"sourcesContent":["// import Table from 'react-bootstrap/Table';\r\nimport React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport NewItem from './NewItem';\r\nimport { Button } from '@nextui-org/react';\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableColumn,\r\n  TableRow,\r\n  TableCell,\r\n} from '@nextui-org/react';\r\n\r\nfunction ListTable(props) {\r\n  const listItemStyle = {\r\n    textDecoration: 'line-through',\r\n    marginBottom: '8px',\r\n    color: '#ff0000',\r\n  };\r\n\r\n  const [selectedKeys, setSelectedKeys] = React.useState(new Set(['2']));\r\n\r\n  //{{}}\r\n\r\n  const handleSelect = (event) => {\r\n    setSelectedKeys();\r\n    event.target.style = listItemStyle;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NewItem insertTask={props.insertTask} list={props.list} />\r\n      <Table\r\n        selectionMode=\"multiple\"\r\n        selectedKeys={selectedKeys}\r\n        onSelectionChange={handleSelect}\r\n        aria-label=\"Example static collection table\">\r\n        <TableHeader>\r\n          <TableColumn>Task</TableColumn>\r\n          <TableColumn>Description</TableColumn>\r\n          <TableColumn>Due Date</TableColumn>\r\n          <TableColumn>Priority</TableColumn>\r\n          <TableColumn>List Name</TableColumn>\r\n        </TableHeader>\r\n        <TableBody emptyContent={'No rows to display.'}>{[]}</TableBody>\r\n        {props.list.map((list) => (\r\n          <TableBody items={list.items}>\r\n            {(val) => (\r\n              <TableRow\r\n                data-selected={val.completed}\r\n                key={`${list._id}-${val._id}`}>\r\n                <TableCell>{val.name}</TableCell>\r\n                <TableCell>{val.description}</TableCell>\r\n                <TableCell>{val.due_date}</TableCell>\r\n                <TableCell>{val.priority}</TableCell>\r\n                <TableCell>{list.name}</TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        ))}\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n//   return (\r\n//     <div>\r\n//       <NewItem insertTask={props.insertTask} list={props.list} />\r\n//       <Table striped bordered hover>\r\n//         <thead>\r\n//           <tr>\r\n//             <th></th>\r\n//             <th>Task</th>\r\n//             <th>Description</th>\r\n//             <th>Due Date</th>\r\n//             <th>Priority</th>\r\n//             <th>List Name</th>\r\n//           </tr>\r\n//         </thead>\r\n\r\n//         {props.list.map((item) => {\r\n//           return (\r\n//             <tbody key={`${item.name}`}>\r\n//               {item.items.map((val) => (\r\n//                 <tr key={`${item.name}`}>\r\n//                   <td>\r\n//                     <Form>\r\n//                       <Form.Check\r\n//                         type={'checkbox'}\r\n//                         id={`default-checkbox`}\r\n//                         checked={val.completed}\r\n//                         onChange={() =>\r\n//                           props.setChecked(item.name, val.name, !val.completed)\r\n//                         }\r\n//                       />\r\n//                     </Form>\r\n//                   </td>\r\n//                   {!val.completed && <td>{val.name}</td>}\r\n//                   {!val.completed && <td>{val.description}</td>}\r\n//                   {!val.completed && <td>{val.due_date}</td>}\r\n//                   {!val.completed && <td>{val.priority}</td>}\r\n//                   {!val.completed && <td>{item.name}</td>}\r\n\r\n//                   {val.completed && <td style={listItemStyle}>{val.name}</td>}\r\n//                   {val.completed && (\r\n//                     <td style={listItemStyle}>{val.description}</td>\r\n//                   )}\r\n//                   {val.completed && (\r\n//                     <td style={listItemStyle}>{val.due_date}</td>\r\n//                   )}\r\n//                   {val.completed && (\r\n//                     <td style={listItemStyle}>{val.priority}</td>\r\n//                   )}\r\n//                   {val.completed && <td style={listItemStyle}>{item.name}</td>}\r\n//                   {/*    Button to delete item*/}\r\n//                   <td>\r\n//                     <Button\r\n//                       variant=\"dark\"\r\n//                       onClick={() => props.deleteTask(item.name, val.name)}\r\n//                       className=\"me-2\">\r\n//                       Delete\r\n//                     </Button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           );\r\n//         })}\r\n//       </Table>\r\n//       {props.list.length === 1 && (\r\n//         <Button\r\n//           variant=\"dark\"\r\n//           onClick={() => props.deleteList(props.list[0].name)}\r\n//           className=\"me-2\">\r\n//           Delete List\r\n//         </Button>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default ListTable;\r\n"],"mappings":"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,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA,GAL5B,GAAEJ,IAAI,CAACgB,GAAI,IAAGN,GAAG,CAACM,GAAI,EAAC;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMrB;MACX;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAlB,EAAA,CA7HSF,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AA+HlB,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}