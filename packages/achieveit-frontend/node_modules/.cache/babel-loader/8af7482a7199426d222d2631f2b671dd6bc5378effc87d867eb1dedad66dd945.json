{"ast":null,"code":"\"use client\";\n\n// src/use-button-group.ts\nimport { buttonGroup } from \"@nextui-org/theme\";\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { useMemo, useCallback } from \"react\";\nfunction useButtonGroup(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, buttonGroup.variantKeys);\n  const {\n    ref,\n    as,\n    children,\n    color = \"default\",\n    size = \"md\",\n    variant = \"solid\",\n    radius,\n    isDisabled = false,\n    disableAnimation = false,\n    disableRipple = false,\n    isIconOnly = false,\n    className,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const classNames = useMemo(() => buttonGroup({\n    ...variantProps,\n    className\n  }), [...Object.values(variantProps), className]);\n  const context = useMemo(() => ({\n    size,\n    color,\n    variant,\n    radius,\n    isIconOnly,\n    isDisabled,\n    disableAnimation,\n    disableRipple,\n    fullWidth: !!(originalProps == null ? void 0 : originalProps.fullWidth)\n  }), [size, color, variant, radius, isDisabled, isIconOnly, disableAnimation, disableRipple, originalProps == null ? void 0 : originalProps.fullWidth]);\n  const getButtonGroupProps = useCallback(() => ({\n    role: \"group\",\n    ...otherProps\n  }), [otherProps]);\n  return {\n    Component,\n    children,\n    domRef,\n    context,\n    classNames,\n    getButtonGroupProps\n  };\n}\nexport { useButtonGroup };","map":{"version":3,"names":["buttonGroup","mapPropsVariants","useDOMRef","useMemo","useCallback","useButtonGroup","originalProps","props","variantProps","variantKeys","ref","as","children","color","size","variant","radius","isDisabled","disableAnimation","disableRipple","isIconOnly","className","otherProps","Component","domRef","classNames","Object","values","context","fullWidth","getButtonGroupProps","role"],"sources":["C:/Users/joelp/csc-307-achieveit/AchieveIt/node_modules/@nextui-org/button/dist/chunk-ZTLH2HDB.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-button-group.ts\nimport { buttonGroup } from \"@nextui-org/theme\";\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { useMemo, useCallback } from \"react\";\nfunction useButtonGroup(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, buttonGroup.variantKeys);\n  const {\n    ref,\n    as,\n    children,\n    color = \"default\",\n    size = \"md\",\n    variant = \"solid\",\n    radius,\n    isDisabled = false,\n    disableAnimation = false,\n    disableRipple = false,\n    isIconOnly = false,\n    className,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const classNames = useMemo(\n    () => buttonGroup({\n      ...variantProps,\n      className\n    }),\n    [...Object.values(variantProps), className]\n  );\n  const context = useMemo(\n    () => ({\n      size,\n      color,\n      variant,\n      radius,\n      isIconOnly,\n      isDisabled,\n      disableAnimation,\n      disableRipple,\n      fullWidth: !!(originalProps == null ? void 0 : originalProps.fullWidth)\n    }),\n    [\n      size,\n      color,\n      variant,\n      radius,\n      isDisabled,\n      isIconOnly,\n      disableAnimation,\n      disableRipple,\n      originalProps == null ? void 0 : originalProps.fullWidth\n    ]\n  );\n  const getButtonGroupProps = useCallback(\n    () => ({\n      role: \"group\",\n      ...otherProps\n    }),\n    [otherProps]\n  );\n  return {\n    Component,\n    children,\n    domRef,\n    context,\n    classNames,\n    getButtonGroupProps\n  };\n}\n\nexport {\n  useButtonGroup\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA,SAASA,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC5C,SAASC,cAAcA,CAACC,aAAa,EAAE;EACrC,MAAM,CAACC,KAAK,EAAEC,YAAY,CAAC,GAAGP,gBAAgB,CAACK,aAAa,EAAEN,WAAW,CAACS,WAAW,CAAC;EACtF,MAAM;IACJC,GAAG;IACHC,EAAE;IACFC,QAAQ;IACRC,KAAK,GAAG,SAAS;IACjBC,IAAI,GAAG,IAAI;IACXC,OAAO,GAAG,OAAO;IACjBC,MAAM;IACNC,UAAU,GAAG,KAAK;IAClBC,gBAAgB,GAAG,KAAK;IACxBC,aAAa,GAAG,KAAK;IACrBC,UAAU,GAAG,KAAK;IAClBC,SAAS;IACT,GAAGC;EACL,CAAC,GAAGf,KAAK;EACT,MAAMgB,SAAS,GAAGZ,EAAE,IAAI,KAAK;EAC7B,MAAMa,MAAM,GAAGtB,SAAS,CAACQ,GAAG,CAAC;EAC7B,MAAMe,UAAU,GAAGtB,OAAO,CACxB,MAAMH,WAAW,CAAC;IAChB,GAAGQ,YAAY;IACfa;EACF,CAAC,CAAC,EACF,CAAC,GAAGK,MAAM,CAACC,MAAM,CAACnB,YAAY,CAAC,EAAEa,SAAS,CAC5C,CAAC;EACD,MAAMO,OAAO,GAAGzB,OAAO,CACrB,OAAO;IACLW,IAAI;IACJD,KAAK;IACLE,OAAO;IACPC,MAAM;IACNI,UAAU;IACVH,UAAU;IACVC,gBAAgB;IAChBC,aAAa;IACbU,SAAS,EAAE,CAAC,EAAEvB,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACuB,SAAS;EACxE,CAAC,CAAC,EACF,CACEf,IAAI,EACJD,KAAK,EACLE,OAAO,EACPC,MAAM,EACNC,UAAU,EACVG,UAAU,EACVF,gBAAgB,EAChBC,aAAa,EACbb,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACuB,SAAS,CAE5D,CAAC;EACD,MAAMC,mBAAmB,GAAG1B,WAAW,CACrC,OAAO;IACL2B,IAAI,EAAE,OAAO;IACb,GAAGT;EACL,CAAC,CAAC,EACF,CAACA,UAAU,CACb,CAAC;EACD,OAAO;IACLC,SAAS;IACTX,QAAQ;IACRY,MAAM;IACNI,OAAO;IACPH,UAAU;IACVK;EACF,CAAC;AACH;AAEA,SACEzB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}