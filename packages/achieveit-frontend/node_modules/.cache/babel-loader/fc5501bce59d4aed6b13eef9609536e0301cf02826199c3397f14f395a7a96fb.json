{"ast":null,"code":"import { filterDOMProps as $e3Dei$filterDOMProps, clamp as $e3Dei$clamp, mergeProps as $e3Dei$mergeProps } from \"@react-aria/utils\";\nimport { useLabel as $e3Dei$useLabel } from \"@react-aria/label\";\nimport { useNumberFormatter as $e3Dei$useNumberFormatter } from \"@react-aria/i18n\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\n\nfunction $204d9ebcedfb8806$export$ed5abd763a836edc(props) {\n  let {\n    value = 0,\n    minValue = 0,\n    maxValue = 100,\n    valueLabel: valueLabel,\n    isIndeterminate: isIndeterminate,\n    formatOptions = {\n      style: \"percent\"\n    }\n  } = props;\n  let domProps = (0, $e3Dei$filterDOMProps)(props, {\n    labelable: true\n  });\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps\n  } = (0, $e3Dei$useLabel)({\n    ...props,\n    // Progress bar is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: \"span\"\n  });\n  value = (0, $e3Dei$clamp)(value, minValue, maxValue);\n  let percentage = (value - minValue) / (maxValue - minValue);\n  let formatter = (0, $e3Dei$useNumberFormatter)(formatOptions);\n  if (!isIndeterminate && !valueLabel) {\n    let valueToFormat = formatOptions.style === \"percent\" ? percentage : value;\n    valueLabel = formatter.format(valueToFormat);\n  }\n  return {\n    progressBarProps: (0, $e3Dei$mergeProps)(domProps, {\n      ...fieldProps,\n      \"aria-valuenow\": isIndeterminate ? undefined : value,\n      \"aria-valuemin\": minValue,\n      \"aria-valuemax\": maxValue,\n      \"aria-valuetext\": isIndeterminate ? undefined : valueLabel,\n      role: \"progressbar\"\n    }),\n    labelProps: labelProps\n  };\n}\nexport { $204d9ebcedfb8806$export$ed5abd763a836edc as useProgressBar };","map":{"version":3,"names":["$204d9ebcedfb8806$export$ed5abd763a836edc","props","value","minValue","maxValue","valueLabel","isIndeterminate","formatOptions","style","domProps","$e3Dei$filterDOMProps","labelable","labelProps","fieldProps","$e3Dei$useLabel","labelElementType","$e3Dei$clamp","percentage","formatter","$e3Dei$useNumberFormatter","valueToFormat","format","progressBarProps","$e3Dei$mergeProps","undefined","role"],"sources":["C:\\Users\\joelp\\csc-307-achieveit\\AchieveIt\\node_modules\\@react-aria\\progress\\dist\\packages\\@react-aria\\progress\\src\\index.ts","C:\\Users\\joelp\\csc-307-achieveit\\AchieveIt\\node_modules\\@react-aria\\progress\\dist\\packages\\@react-aria\\progress\\src\\useProgressBar.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useProgressBar} from './useProgressBar';\nexport type {AriaProgressBarProps} from '@react-types/progress';\nexport type {ProgressBarAria} from './useProgressBar';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaProgressBarProps} from '@react-types/progress';\nimport {clamp, filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {DOMAttributes} from '@react-types/shared';\nimport {useLabel} from '@react-aria/label';\nimport {useNumberFormatter} from '@react-aria/i18n';\n\nexport interface ProgressBarAria {\n  /** Props for the progress bar container element. */\n  progressBarProps: DOMAttributes,\n  /** Props for the progress bar's visual label element (if any). */\n  labelProps: DOMAttributes\n}\n\n/**\n * Provides the accessibility implementation for a progress bar component.\n * Progress bars show either determinate or indeterminate progress of an operation\n * over time.\n */\nexport function useProgressBar(props: AriaProgressBarProps): ProgressBarAria {\n  let {\n    value = 0,\n    minValue = 0,\n    maxValue = 100,\n    valueLabel,\n    isIndeterminate,\n    formatOptions = {\n      style: 'percent'\n    }\n  } = props;\n\n  let domProps = filterDOMProps(props, {labelable: true});\n  let {labelProps, fieldProps} = useLabel({\n    ...props,\n    // Progress bar is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span'\n  });\n\n  value = clamp(value, minValue, maxValue);\n  let percentage = (value - minValue) / (maxValue - minValue);\n  let formatter = useNumberFormatter(formatOptions);\n\n  if (!isIndeterminate && !valueLabel) {\n    let valueToFormat = formatOptions.style === 'percent' ? percentage : value;\n    valueLabel = formatter.format(valueToFormat);\n  }\n\n  return {\n    progressBarProps: mergeProps(domProps, {\n      ...fieldProps,\n      'aria-valuenow': isIndeterminate ? undefined : value,\n      'aria-valuemin': minValue,\n      'aria-valuemax': maxValue,\n      'aria-valuetext': isIndeterminate ? undefined : valueLabel as string,\n      role: 'progressbar'\n    }),\n    labelProps\n  };\n}\n"],"mappings":";;;;AAAA;;;;;;;;;;ACAA,GDAA,CCAA;;;;;;;;;;;;AA8BO,SAASA,0CAAeC,KAA2B;EACxD,IAAI;IACFC,KAAA,GAAQ;IACRC,QAAA,GAAW;IACXC,QAAA,GAAW;IAAAC,UAAA,EACXA,UAAU;IAAAC,eAAA,EACVA,eAAe;IACfC,aAAA,GAAgB;MACdC,KAAA,EAAO;IACT;EAAA,CACD,GAAGP,KAAA;EAEJ,IAAIQ,QAAA,GAAW,IAAAC,qBAAa,EAAET,KAAA,EAAO;IAACU,SAAA,EAAW;EAAI;EACrD,IAAI;IAAAC,UAAA,EAACA,UAAU;IAAAC,UAAA,EAAEA;EAAU,CAAC,GAAG,IAAAC,eAAO,EAAE;IACtC,GAAGb,KAAK;IACR;IACA;IACAc,gBAAA,EAAkB;EACpB;EAEAb,KAAA,GAAQ,IAAAc,YAAI,EAAEd,KAAA,EAAOC,QAAA,EAAUC,QAAA;EAC/B,IAAIa,UAAA,GAAa,CAACf,KAAA,GAAQC,QAAO,KAAMC,QAAA,GAAWD,QAAO;EACzD,IAAIe,SAAA,GAAY,IAAAC,yBAAiB,EAAEZ,aAAA;EAEnC,IAAI,CAACD,eAAA,IAAmB,CAACD,UAAA,EAAY;IACnC,IAAIe,aAAA,GAAgBb,aAAA,CAAcC,KAAK,KAAK,YAAYS,UAAA,GAAaf,KAAA;IACrEG,UAAA,GAAaa,SAAA,CAAUG,MAAM,CAACD,aAAA;EAChC;EAEA,OAAO;IACLE,gBAAA,EAAkB,IAAAC,iBAAS,EAAEd,QAAA,EAAU;MACrC,GAAGI,UAAU;MACb,iBAAiBP,eAAA,GAAkBkB,SAAA,GAAYtB,KAAA;MAC/C,iBAAiBC,QAAA;MACjB,iBAAiBC,QAAA;MACjB,kBAAkBE,eAAA,GAAkBkB,SAAA,GAAYnB,UAAA;MAChDoB,IAAA,EAAM;IACR;gBACAb;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}